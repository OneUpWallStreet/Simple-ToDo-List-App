{"ast":null,"code":"var _jsxFileName = \"/Users/Arteezy/Documents/React/todo/src/HomePage.jsx\";\nimport React from 'react';\nimport TextField from './Components/TextField';\nimport PrintItems from './Components/PrintItems';\nimport { list } from 'postcss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HomePage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      list: [],\n      text: \"\",\n      completed_list: []\n    };\n    this.handleAdd = this.handleAdd.bind(this);\n    this.ChangeText = this.ChangeText.bind(this);\n    this.clearText = this.clearText.bind(this);\n    this.DeleteItem = this.DeleteItem.bind(this);\n    this.GetCompletedList = this.GetCompletedList.bind(this);\n    this.CompleteItem = this.CompleteItem.bind(this);\n  } //Get a new list with only the completed items\n\n\n  GetCompletedList() {\n    var list_temp = [];\n    this.state.list.forEach(item => {\n      const newItem = {\n        id: list_temp.length,\n        value: item.value,\n        completed: item.completed,\n        showCompletedList: false\n      };\n      console.log(\"Home\");\n\n      if (item.completed === \"true\") {\n        console.log(\"In IF True\");\n        list_temp.push(newItem);\n      }\n    });\n    this.setState({\n      completed_list: list_temp\n    });\n  } //Set an already existing item's value to true\n\n\n  CompleteItem(value) {\n    var list_temp = [];\n    this.state.list.forEach(item => {\n      if (item.value === value) {\n        const newItem = {\n          id: list_temp.length,\n          value: item.value,\n          completed: \"true\"\n        };\n        console.log(newItem);\n        list_temp.push(newItem);\n      } else {\n        const newItem = {\n          id: list_temp.length,\n          value: item.value,\n          completed: item.completed\n        };\n        list_temp.push(newItem);\n      }\n    });\n    console.log(\"end: \", list_temp);\n    this.setState({\n      list: list_temp\n    });\n  }\n\n  DeleteItem(value) {\n    // console.log(\"Value: \",value)\n    var list_temp = []; // console.log(\"List at start: \",this.state.list)\n\n    this.state.list.forEach(item => {\n      const newItem = {\n        id: list_temp.length,\n        value: item.value,\n        completed: item.completed\n      };\n      console.log(\"VALUE IS: \", newItem);\n\n      if (item.value !== value) {\n        // console.log(\"Item.value: \",item.value)\n        // console.log(\"IN IF STATeMENT FOR VALUE: \",value)\n        list_temp.push(newItem);\n      } else {\n        console.log(\"in Else Statement when value is: \", value);\n      }\n    });\n    this.setState({\n      list: list_temp\n    });\n  }\n\n  ChangeText(input) {\n    this.setState({\n      text: input\n    });\n  }\n\n  clearText() {\n    this.setState({\n      text: \"\"\n    });\n  }\n\n  handleAdd() {\n    if (this.state.text === \"\") {\n      return;\n    }\n\n    const newItem = {\n      id: this.state.list.length,\n      value: this.state.text,\n      completed: \"false\"\n    };\n    this.setState(state => ({\n      list: this.state.list.concat(newItem),\n      completed_list: this.state.list.concat(newItem)\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        ChangeText: this.ChangeText,\n        handleAdd: this.handleAdd,\n        clearText: this.clearText,\n        list: this.state.list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PrintItems, {\n        CompleteItem: this.CompleteItem,\n        GetCompletedList: this.GetCompletedList,\n        DeleteItem: this.DeleteItem,\n        completed_list: this.state.completed_list,\n        items: this.state.list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/Arteezy/Documents/React/todo/src/HomePage.jsx"],"names":["React","TextField","PrintItems","list","HomePage","Component","constructor","state","text","completed_list","handleAdd","bind","ChangeText","clearText","DeleteItem","GetCompletedList","CompleteItem","list_temp","forEach","item","newItem","id","length","value","completed","showCompletedList","console","log","push","setState","input","concat","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TextField from './Components/TextField'\nimport PrintItems from './Components/PrintItems'\nimport { list } from 'postcss'\n\n\nclass HomePage extends React.Component{\n\n\n    constructor(){\n        super()\n\n    this.state = {\n\n        list: [],\n        text: \"\",\n        completed_list: []\n\n    }\n\n    this.handleAdd = this.handleAdd.bind(this)\n    this.ChangeText = this.ChangeText.bind(this)\n    this.clearText = this.clearText.bind(this)\n    this.DeleteItem = this.DeleteItem.bind(this)\n    this.GetCompletedList = this.GetCompletedList.bind(this)\n    this.CompleteItem = this.CompleteItem.bind(this)\n    }\n\n    \n\n    //Get a new list with only the completed items\n    GetCompletedList(){\n\n        var list_temp = []\n\n        this.state.list.forEach(item => {\n\n            const newItem = {\n\n                id: list_temp.length,\n                value: item.value,\n                completed: item.completed,\n                showCompletedList: false\n\n            }\n\n            console.log(\"Home\")\n\n            if(item.completed === \"true\"){\n                console.log(\"In IF True\")\n                list_temp.push(newItem)\n            }\n            \n        })\n\n        this.setState({completed_list: list_temp})\n\n    }\n\n    //Set an already existing item's value to true\n    CompleteItem(value){\n\n        var list_temp = []\n\n        this.state.list.forEach(item => {\n        \n\n            if(item.value === value){\n                const newItem = {\n                    id: list_temp.length,\n                    value: item.value,\n                    completed: \"true\"\n                }\n                console.log(newItem)\n                list_temp.push(newItem)\n            }\n            else{\n                const newItem = {\n                    id: list_temp.length,\n                    value: item.value,\n                    completed: item.completed\n                }\n\n                list_temp.push(newItem)\n            }\n\n\n\n        })\n        console.log(\"end: \",list_temp)\n        this.setState({list: list_temp})\n        \n\n\n    }\n\n    DeleteItem(value){\n\n        // console.log(\"Value: \",value)\n        var list_temp = []\n        // console.log(\"List at start: \",this.state.list)\n\n        this.state.list.forEach(item => {\n\n            const newItem = {\n                \n                id: list_temp.length,\n                value: item.value,\n                completed: item.completed\n            }   \n            console.log(\"VALUE IS: \",newItem)\n\n            if(item.value !== value){\n                // console.log(\"Item.value: \",item.value)\n                // console.log(\"IN IF STATeMENT FOR VALUE: \",value)\n                list_temp.push(newItem)\n            }\n            else{\n                console.log(\"in Else Statement when value is: \",value)\n            }\n\n        }\n\n        )\n\n        this.setState({list: list_temp})\n\n    }\n\n    ChangeText(input){\n        this.setState({text: input})\n\n    }\n\n    clearText(){\n        this.setState({text: \"\"})\n\n    }\n\n    handleAdd(){\n        \n\n        if(this.state.text === \"\"){\n            return\n        }\n\n        const newItem = {\n            id: this.state.list.length,\n            value: this.state.text,\n            completed: \"false\"\n        }\n\n\n        this.setState(state => ({\n            list: this.state.list.concat(newItem),\n            completed_list: this.state.list.concat(newItem)\n        }))\n\n        \n    }\n\n    render(){\n        return(\n            <div>\n                <TextField ChangeText = {this.ChangeText} handleAdd = {this.handleAdd} clearText = {this.clearText} list = {this.state.list}/>\n                <PrintItems CompleteItem = {this.CompleteItem} GetCompletedList = {this.GetCompletedList}  DeleteItem = {this.DeleteItem} completed_list = {this.state.completed_list}  items = {this.state.list}/>\n            </div>\n        )\n    }\n\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}