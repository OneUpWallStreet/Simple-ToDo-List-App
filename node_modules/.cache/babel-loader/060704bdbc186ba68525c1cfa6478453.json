{"ast":null,"code":"var _jsxFileName = \"/Users/Arteezy/Documents/React/todo/src/HomePage.jsx\";\nimport React from 'react';\nimport TextField from './Components/TextField';\nimport PrintItems from './Components/PrintItems';\nimport { list } from 'postcss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HomePage extends React.Component {\n  constructor() {\n    super();\n\n    this.CompleteItem = async function (value) {\n      var list_temp = [];\n      this.state.list.forEach(item => {\n        if (item.value === value) {\n          const newItem = {\n            id: list_temp.length,\n            value: item.value,\n            completed: \"true\"\n          };\n          console.log(newItem);\n          list_temp.push(newItem);\n        } else {\n          const newItem = {\n            id: list_temp.length,\n            value: item.value,\n            completed: item.completed\n          };\n          list_temp.push(newItem);\n        }\n      });\n      console.log(\"end: \", list_temp);\n      await this.setState({\n        list: list_temp\n      });\n      this.GetCompletedList();\n    };\n\n    this.state = {\n      list: [],\n      text: \"\",\n      completed_list: [],\n      showCompletedList: false\n    };\n    this.handleAdd = this.handleAdd.bind(this);\n    this.ChangeText = this.ChangeText.bind(this);\n    this.clearText = this.clearText.bind(this);\n    this.DeleteItem = this.DeleteItem.bind(this);\n    this.GetCompletedList = this.GetCompletedList.bind(this);\n    this.CompleteItem = this.CompleteItem.bind(this);\n    this.ShowCompletedList = this.ShowCompletedList.bind(this);\n    this.ShowAllList = this.ShowAllList.bind(this);\n  }\n\n  ShowAllList() {\n    this.setState({\n      showCompletedList: false\n    });\n  }\n\n  ShowCompletedList() {\n    this.setState({\n      showCompletedList: true\n    });\n  } //Get a new list with only the completed items\n\n\n  GetCompletedList() {\n    var list_temp = [];\n    this.state.list.forEach(item => {\n      const newItem = {\n        id: list_temp.length,\n        value: item.value,\n        completed: item.completed,\n        showCompletedList: false\n      };\n      console.log(\"Home\");\n\n      if (item.completed === \"true\") {\n        console.log(\"In IF True\");\n        list_temp.push(newItem);\n      }\n    });\n    this.setState({\n      completed_list: list_temp\n    });\n  } //Set an already existing item's value to true\n\n\n  DeleteItem(value) {\n    // console.log(\"Value: \",value)\n    var list_temp = []; // console.log(\"List at start: \",this.state.list)\n\n    this.state.list.forEach(item => {\n      const newItem = {\n        id: list_temp.length,\n        value: item.value,\n        completed: item.completed,\n        icon: item.completed\n      };\n      console.log(\"VALUE IS: \", newItem);\n\n      if (item.value !== value) {\n        // console.log(\"Item.value: \",item.value)\n        // console.log(\"IN IF STATeMENT FOR VALUE: \",value)\n        list_temp.push(newItem);\n      } else {\n        console.log(\"in Else Statement when value is: \", value);\n      }\n    });\n    this.setState({\n      list: list_temp\n    });\n    this.GetCompletedList();\n  }\n\n  ChangeText(input) {\n    this.setState({\n      text: input\n    });\n  }\n\n  clearText() {\n    this.setState({\n      text: \"\"\n    });\n  }\n\n  handleAdd() {\n    if (this.state.text === \"\") {\n      return;\n    }\n\n    const newItem = {\n      id: this.state.list.length,\n      value: this.state.text,\n      completed: \"false\",\n      icon: \"âœ…\"\n    };\n    this.setState(state => ({\n      list: this.state.list.concat(newItem),\n      completed_list: this.state.list.concat(newItem)\n    }));\n    this.GetCompletedList();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        ShowAllList: this.ShowAllList,\n        ShowCompletedList: this.ShowCompletedList,\n        ChangeText: this.ChangeText,\n        handleAdd: this.handleAdd,\n        clearText: this.clearText,\n        list: this.state.list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PrintItems, {\n        showCompletedList: this.state.showCompletedList,\n        ShowCompletedList: this.ShowCompletedList,\n        CompleteItem: this.CompleteItem,\n        GetCompletedList: this.GetCompletedList,\n        DeleteItem: this.DeleteItem,\n        completed_list: this.state.completed_list,\n        items: this.state.list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/Arteezy/Documents/React/todo/src/HomePage.jsx"],"names":["React","TextField","PrintItems","list","HomePage","Component","constructor","CompleteItem","value","list_temp","state","forEach","item","newItem","id","length","completed","console","log","push","setState","GetCompletedList","text","completed_list","showCompletedList","handleAdd","bind","ChangeText","clearText","DeleteItem","ShowCompletedList","ShowAllList","icon","input","concat","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TextField from './Components/TextField'\nimport PrintItems from './Components/PrintItems'\nimport { list } from 'postcss'\n\n\nclass HomePage extends React.Component{\n\n\n    constructor(){\n        super()\n\n    this.state = {\n\n        list: [],\n        text: \"\",\n        completed_list: [],\n        showCompletedList: false\n\n    }\n\n    this.handleAdd = this.handleAdd.bind(this)\n    this.ChangeText = this.ChangeText.bind(this)\n    this.clearText = this.clearText.bind(this)\n    this.DeleteItem = this.DeleteItem.bind(this)\n    this.GetCompletedList = this.GetCompletedList.bind(this)\n    this.CompleteItem = this.CompleteItem.bind(this)\n    this.ShowCompletedList = this.ShowCompletedList.bind(this)\n    this.ShowAllList = this.ShowAllList.bind(this)\n    }\n\n    ShowAllList(){\n        this.setState({showCompletedList: false})\n    }\n\n    ShowCompletedList(){\n        this.setState({showCompletedList: true})\n        \n    }\n\n    //Get a new list with only the completed items\n    GetCompletedList(){\n\n        var list_temp = []\n\n        this.state.list.forEach(item => {\n\n            const newItem = {\n\n                id: list_temp.length,\n                value: item.value,\n                completed: item.completed,\n                showCompletedList: false\n\n            }\n\n            console.log(\"Home\")\n\n            if(item.completed === \"true\"){\n                console.log(\"In IF True\")\n                list_temp.push(newItem)\n            }\n            \n        })\n\n        this.setState({completed_list: list_temp})\n\n    }\n\n    //Set an already existing item's value to true\n    CompleteItem = async function(value){\n\n        var list_temp = []\n\n        this.state.list.forEach(item => {\n        \n\n            if(item.value === value){\n                const newItem = {\n                    id: list_temp.length,\n                    value: item.value,\n                    completed: \"true\"\n                }\n                console.log(newItem)\n                list_temp.push(newItem)\n            }\n            else{\n                const newItem = {\n                    id: list_temp.length,\n                    value: item.value,\n                    completed: item.completed\n                }\n\n                list_temp.push(newItem)\n            }\n\n\n\n        })\n        console.log(\"end: \",list_temp)\n        await this.setState({list: list_temp})\n\n        this.GetCompletedList()\n\n    }\n\n    DeleteItem(value){\n\n        // console.log(\"Value: \",value)\n        var list_temp = []\n        // console.log(\"List at start: \",this.state.list)\n\n        this.state.list.forEach(item => {\n\n            const newItem = {\n                \n                id: list_temp.length,\n                value: item.value,\n                completed: item.completed,\n                icon: item.completed\n            }   \n            console.log(\"VALUE IS: \",newItem)\n\n            if(item.value !== value){\n                // console.log(\"Item.value: \",item.value)\n                // console.log(\"IN IF STATeMENT FOR VALUE: \",value)\n                list_temp.push(newItem)\n            }\n            else{\n                console.log(\"in Else Statement when value is: \",value)\n            }\n\n        }\n\n        )\n\n        this.setState({list: list_temp})\n        this.GetCompletedList()\n\n    }\n\n    ChangeText(input){\n        this.setState({text: input})\n\n    }\n\n    clearText(){\n        this.setState({text: \"\"})\n\n    }\n\n    handleAdd(){\n        \n\n        if(this.state.text === \"\"){\n            return\n        }\n\n        const newItem = {\n            id: this.state.list.length,\n            value: this.state.text,\n            completed: \"false\",\n            icon: \"âœ…\"\n        }\n\n\n        this.setState(state => ({\n            list: this.state.list.concat(newItem),\n            completed_list: this.state.list.concat(newItem)\n        }))\n\n        this.GetCompletedList()\n    }\n\n    render(){\n        return(\n            <div>\n                <TextField ShowAllList = {this.ShowAllList} ShowCompletedList = {this.ShowCompletedList} ChangeText = {this.ChangeText} handleAdd = {this.handleAdd} clearText = {this.clearText} list = {this.state.list}/>\n                <PrintItems showCompletedList = {this.state.showCompletedList}  ShowCompletedList = {this.ShowCompletedList} CompleteItem = {this.CompleteItem} GetCompletedList = {this.GetCompletedList}  DeleteItem = {this.DeleteItem} completed_list = {this.state.completed_list}  items = {this.state.list}/>\n            </div>\n        )\n    }\n\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}